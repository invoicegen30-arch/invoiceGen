import { NextResponse } from "next/server";
import { db } from "@/lib/db";
import { getCardServStatus } from "@/lib/cardserv";

export async function POST(req: Request) {
  try {
    const body = await req.json();
    console.log("üì© CardServ Webhook received:", body);

    const orderMerchantId = body.orderMerchantId || body.order?.orderMerchantId;
    if (!orderMerchantId) {
      console.error("‚ùå Webhook missing orderMerchantId");
      return NextResponse.json({ ok: false }, { status: 400 });
    }

    // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å
    const statusData = await getCardServStatus(orderMerchantId);
    console.log("üîπ Webhook statusData:", statusData.orderState);

    // üîπ –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å —É –±–∞–∑—ñ
    const order = await db.order.updateMany({
      where: { orderMerchantId },
      data: {
        status: statusData.orderState,
        response: statusData.raw,
      },
    });

    // üîπ –Ø–∫—â–æ –æ–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–∞ ‚Äî –Ω–∞—Ä–∞—Ö–æ–≤—É—î–º–æ —Ç–æ–∫–µ–Ω–∏
    if (statusData.orderState === "APPROVED") {
      const dbOrder = await db.order.findFirst({
        where: { orderMerchantId },
      });

      if (!dbOrder) {
        console.warn(`‚ö†Ô∏è Order ${orderMerchantId} not found in DB`);
        return NextResponse.json({ ok: false }, { status: 404 });
      }

      const user = await db.user.findUnique({
        where: { email: dbOrder.userEmail },
      });

      if (user && dbOrder.tokens) {
        const newBalance = user.tokenBalance + dbOrder.tokens;

        await db.user.update({
          where: { id: user.id },
          data: { tokenBalance: newBalance },
        });

        await db.ledgerEntry.create({
          data: {
            userId: user.id,
            type: "Top-up",
            delta: dbOrder.tokens,
            balanceAfter: newBalance,
            currency: user.currency,
            amount: Math.round(dbOrder.amount * 100),
          },
        });

        console.log(`‚úÖ Tokens credited via Webhook: +${dbOrder.tokens} to ${user.email}`);
      }
    }

    return NextResponse.json({ ok: true, status: statusData.orderState });
  } catch (err: any) {
    console.error("‚ùå Webhook error:", err);
    return NextResponse.json({ ok: false, error: err.message }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({ ok: true });
}
